/*
    Exchange public token generated by plaid-link on the client-side for a
    server-side access_token that is stored on the user's database row for
    future requests.
*/
module.exports = function(req, res, next) {
    var public_token = req.body.public_token;
    var returning = req.body.returning;

    // Exchange a public_token for a Plaid access_token
    req.plaid.exchangeToken(public_token, function(err, exchangeTokenRes) {
        if (err != null) { /* Handle Error */ }

        // This is your Plaid access token - store somewhere persistent
        // The access_token can be used to make Plaid API calls to
        // retrieve accounts and transactions
        var access_token = exchangeTokenRes.access_token;

        // Persist the access_token
        req.models.User.update({
            access_token: access_token
        }, {
            fields: ['access_token'],
            where: { id: req.user.id }
        }).then(function(user) {

            // Retrieve user's accounts with token
            req.plaid.getAuthUser(access_token, function(err, authRes) {
                if (err != null) { /* Handle Error */ }

                // An array of accounts for this user, containing account
                // names, balances, and account and routing numbers.
                var accounts = authRes.accounts;

                // Generate promises and resolve all
                Promise.all(accounts.map(function(account) {
                    return req.models.PlaidAccount.upsertWithReturn({
                        where: {
                            plaid_id: account._id
                        },
                        defaults: req.models.PlaidAccount.fromPlaidObject(
                            account, req.user
                        )
                    });
                })).then(function(accounts) {
                    res.json({
                        status: req.status.success,
                        data: (returning ? accounts : {
                            updated: true
                        })
                    });
                });
            });
        });
    });
};
